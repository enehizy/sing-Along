{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/User/Desktop/projects/sing-along/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/User/Desktop/projects/sing-along/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\projects\\\\sing-along\\\\pages\\\\search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport axios from 'axios';\nimport SongCard from '../components/songCard';\nimport LoadingSongs from '../components/loadingSong';\nimport Reload from '../components/reload';\n\nfunction search() {\n  _s();\n\n  var _this = this;\n\n  var router = useRouter();\n\n  var _useState = useState(false),\n      songLoaded = _useState[0],\n      setSongloaded = _useState[1];\n\n  var _useState2 = useState([]),\n      songsFound = _useState2[0],\n      setSongsFound = _useState2[1];\n\n  var _useState3 = useState(false),\n      networkError = _useState3[0],\n      setNetworkError = _useState3[1];\n\n  useEffect(function () {\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(router.basePath); //  const result= await axios('api/search?q=drake');\n              //  console.log(result.data);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }, []);\n\n  if (networkError) {\n    return /*#__PURE__*/_jsxDEV(Reload, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 15\n    }, this);\n  }\n\n  if (!songLoaded) {\n    return /*#__PURE__*/_jsxDEV(LoadingSongs, {\n      title: \"Songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 15\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: songsFound.map(function (song, index) {\n      return /*#__PURE__*/_jsxDEV(SongCard, {\n        img: song.result.song_art_image_thumbnail_url,\n        title: song.result.title,\n        artistName: song.result.primary_artist.name,\n        fullTitle: song.result.full_title,\n        path: song.result.path,\n        id: song.result.id\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 26\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 12\n  }, this);\n}\n\n_s(search, \"0+oR0z5a9B7z6TDUfaEUJN+fRSI=\", false, function () {\n  return [useRouter];\n});\n\nexport default search;","map":{"version":3,"sources":["C:/Users/User/Desktop/projects/sing-along/pages/search.js"],"names":["React","useEffect","useState","useRouter","axios","SongCard","LoadingSongs","Reload","search","router","songLoaded","setSongloaded","songsFound","setSongsFound","networkError","setNetworkError","console","log","basePath","map","song","index","result","song_art_image_thumbnail_url","title","primary_artist","name","full_title","path","id"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AACA,SAASC,MAAT,GAAiB;AAAA;;AAAA;;AACb,MAAMC,MAAM,GAACN,SAAS,EAAtB;;AADa,kBAEkBD,QAAQ,CAAC,KAAD,CAF1B;AAAA,MAERQ,UAFQ;AAAA,MAEGC,aAFH;;AAAA,mBAGkBT,QAAQ,CAAC,EAAD,CAH1B;AAAA,MAGRU,UAHQ;AAAA,MAGGC,aAHH;;AAAA,mBAIsBX,QAAQ,CAAC,KAAD,CAJ9B;AAAA,MAIRY,YAJQ;AAAA,MAIKC,eAJL;;AAKbd,EAAAA,SAAS,CAAC,YAAI;AAEd,6DAAC;AAAA;AAAA;AAAA;AAAA;AACDe,cAAAA,OAAO,CAACC,GAAR,CAAYR,MAAM,CAACS,QAAnB,EADC,CAED;AACA;;AAHC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAMC,GARQ,EAQP,EARO,CAAT;;AASD,MAAGJ,YAAH,EAAgB;AACZ,wBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,MAAG,CAACJ,UAAJ,EAAe;AACZ,wBAAQ,QAAC,YAAD;AAAc,MAAA,KAAK,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,YAAR;AACF;;AACG,sBACI;AAAA,cACKE,UAAU,CAACO,GAAX,CAAe,UAACC,IAAD,EAAMC,KAAN,EAAc;AAC3B,0BAAO,QAAC,QAAD;AAAsB,QAAA,GAAG,EAAED,IAAI,CAACE,MAAL,CAAYC,4BAAvC;AAAqE,QAAA,KAAK,EAAEH,IAAI,CAACE,MAAL,CAAYE,KAAxF;AAA+F,QAAA,UAAU,EAAEJ,IAAI,CAACE,MAAL,CAAYG,cAAZ,CAA2BC,IAAtI;AAA4I,QAAA,SAAS,EAAEN,IAAI,CAACE,MAAL,CAAYK,UAAnK;AAA+K,QAAA,IAAI,EAAEP,IAAI,CAACE,MAAL,CAAYM,IAAjM;AAAuM,QAAA,EAAE,EAAER,IAAI,CAACE,MAAL,CAAYO;AAAvN,SAAeR,KAAf;AAAA;AAAA;AAAA;AAAA,eAAP;AACH,KAFC;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAWN;;GA/BQb,M;UACQL,S;;;AAgCjB,eAAeK,MAAf","sourcesContent":["import React,{useEffect,useState} from 'react';\r\nimport {useRouter} from 'next/router';\r\nimport axios from 'axios';\r\n\r\nimport SongCard from '../components/songCard';\r\nimport LoadingSongs from '../components/loadingSong';\r\nimport Reload from '../components/reload';\r\nfunction search(){\r\n    const router=useRouter();\r\n    let [songLoaded,setSongloaded]=useState(false);\r\n    let [songsFound,setSongsFound]=useState([]);\r\n    let [networkError,setNetworkError]=useState(false);\r\n    useEffect(()=>{\r\n   \r\n    (async function(){\r\n    console.log(router.basePath);\r\n    //  const result= await axios('api/search?q=drake');\r\n    //  console.log(result.data);\r\n    })()\r\n\r\n    },[])\r\n   if(networkError){\r\n       return(<Reload/>)\r\n   }\r\n   if(!songLoaded){\r\n      return (<LoadingSongs title=\"Songs\"/>)\r\n   }\r\n       return(\r\n           <div>\r\n               {songsFound.map((song,index)=>{\r\n                  return(<SongCard key={index} img={song.result.song_art_image_thumbnail_url} title={song.result.title} artistName={song.result.primary_artist.name} fullTitle={song.result.full_title} path={song.result.path} id={song.result.id}/>)\r\n              })}\r\n        \r\n              \r\n           </div>\r\n       )\r\n  \r\n\r\n}\r\n\r\nexport default search;"]},"metadata":{},"sourceType":"module"}