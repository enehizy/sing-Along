{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\projects\\\\sing-along\\\\pages\\\\search.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport axios from 'axios';\nimport SongCard from '../components/songCard';\nimport LoadingSongs from '../components/loadingSong';\nimport Reload from '../components/reload';\n\nfunction search() {\n  const router = useRouter();\n  let {\n    0: songLoaded,\n    1: setSongloaded\n  } = useState(false);\n  let {\n    0: songsFound,\n    1: setSongsFound\n  } = useState([]);\n  let {\n    0: networkError,\n    1: setNetworkError\n  } = useState(false);\n  useEffect(() => {\n    (async function () {\n      const result = await axios(`api/${router.asPath}`);\n      console.log(result.data);\n    })();\n  }, []);\n\n  if (networkError) {\n    return /*#__PURE__*/_jsxDEV(Reload, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 15\n    }, this);\n  }\n\n  if (!songLoaded) {\n    return /*#__PURE__*/_jsxDEV(LoadingSongs, {\n      title: \"Songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 15\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: songsFound.map((song, index) => {\n      return /*#__PURE__*/_jsxDEV(SongCard, {\n        img: song.result.song_art_image_thumbnail_url,\n        title: song.result.title,\n        artistName: song.result.primary_artist.name,\n        fullTitle: song.result.full_title,\n        path: song.result.path,\n        id: song.result.id\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 26\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 12\n  }, this);\n}\n\nexport default search;","map":{"version":3,"sources":["C:/Users/User/Desktop/projects/sing-along/pages/search.js"],"names":["React","useEffect","useState","useRouter","axios","SongCard","LoadingSongs","Reload","search","router","songLoaded","setSongloaded","songsFound","setSongsFound","networkError","setNetworkError","result","asPath","console","log","data","map","song","index","song_art_image_thumbnail_url","title","primary_artist","name","full_title","path","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AACA,SAASC,MAAT,GAAiB;AACb,QAAMC,MAAM,GAACN,SAAS,EAAtB;AACA,MAAI;AAAA,OAACO,UAAD;AAAA,OAAYC;AAAZ,MAA2BT,QAAQ,CAAC,KAAD,CAAvC;AACA,MAAI;AAAA,OAACU,UAAD;AAAA,OAAYC;AAAZ,MAA2BX,QAAQ,CAAC,EAAD,CAAvC;AACA,MAAI;AAAA,OAACY,YAAD;AAAA,OAAcC;AAAd,MAA+Bb,QAAQ,CAAC,KAAD,CAA3C;AACAD,EAAAA,SAAS,CAAC,MAAI;AAEd,KAAC,kBAAgB;AAEhB,YAAMe,MAAM,GAAE,MAAMZ,KAAK,CAAE,OAAMK,MAAM,CAACQ,MAAO,EAAtB,CAAzB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,IAAnB;AACA,KAJD;AAMC,GARQ,EAQP,EARO,CAAT;;AASD,MAAGN,YAAH,EAAgB;AACZ,wBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,MAAG,CAACJ,UAAJ,EAAe;AACZ,wBAAQ,QAAC,YAAD;AAAc,MAAA,KAAK,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,YAAR;AACF;;AACG,sBACI;AAAA,cACKE,UAAU,CAACS,GAAX,CAAe,CAACC,IAAD,EAAMC,KAAN,KAAc;AAC3B,0BAAO,QAAC,QAAD;AAAsB,QAAA,GAAG,EAAED,IAAI,CAACN,MAAL,CAAYQ,4BAAvC;AAAqE,QAAA,KAAK,EAAEF,IAAI,CAACN,MAAL,CAAYS,KAAxF;AAA+F,QAAA,UAAU,EAAEH,IAAI,CAACN,MAAL,CAAYU,cAAZ,CAA2BC,IAAtI;AAA4I,QAAA,SAAS,EAAEL,IAAI,CAACN,MAAL,CAAYY,UAAnK;AAA+K,QAAA,IAAI,EAAEN,IAAI,CAACN,MAAL,CAAYa,IAAjM;AAAuM,QAAA,EAAE,EAAEP,IAAI,CAACN,MAAL,CAAYc;AAAvN,SAAeP,KAAf;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFC;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAWN;;AAED,eAAef,MAAf","sourcesContent":["import React,{useEffect,useState} from 'react';\r\nimport {useRouter} from 'next/router';\r\nimport axios from 'axios';\r\n\r\nimport SongCard from '../components/songCard';\r\nimport LoadingSongs from '../components/loadingSong';\r\nimport Reload from '../components/reload';\r\nfunction search(){\r\n    const router=useRouter();\r\n    let [songLoaded,setSongloaded]=useState(false);\r\n    let [songsFound,setSongsFound]=useState([]);\r\n    let [networkError,setNetworkError]=useState(false);\r\n    useEffect(()=>{\r\n   \r\n    (async function(){\r\n    \r\n     const result= await axios(`api/${router.asPath}`);\r\n     console.log(result.data);\r\n    })()\r\n\r\n    },[])\r\n   if(networkError){\r\n       return(<Reload/>)\r\n   }\r\n   if(!songLoaded){\r\n      return (<LoadingSongs title=\"Songs\"/>)\r\n   }\r\n       return(\r\n           <div>\r\n               {songsFound.map((song,index)=>{\r\n                  return(<SongCard key={index} img={song.result.song_art_image_thumbnail_url} title={song.result.title} artistName={song.result.primary_artist.name} fullTitle={song.result.full_title} path={song.result.path} id={song.result.id}/>)\r\n              })}\r\n        \r\n              \r\n           </div>\r\n       )\r\n  \r\n\r\n}\r\n\r\nexport default search;"]},"metadata":{},"sourceType":"module"}