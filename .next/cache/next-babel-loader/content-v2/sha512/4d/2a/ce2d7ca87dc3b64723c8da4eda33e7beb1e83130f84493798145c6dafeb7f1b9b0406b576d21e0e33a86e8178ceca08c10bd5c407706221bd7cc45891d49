{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\projects\\\\sing-along\\\\pages\\\\search.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport SongCard from '../components/songCard';\nimport Reload from '../components/reload';\n\nfunction search({\n  songs,\n  error\n}) {\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Reload, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 15\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: songs.map((song, index) => {\n      return /*#__PURE__*/_jsxDEV(SongCard, {\n        img: song.result.song_art_image_thumbnail_url,\n        title: song.result.title,\n        artistName: song.result.primary_artist.name,\n        fullTitle: song.result.full_title,\n        path: song.result.path,\n        id: song.result.id\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 26\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 12\n  }, this);\n}\n\nexport const getServerSideProps = async context => {\n  const {\n    q\n  } = context.query;\n\n  try {\n    const result = await axios(`api/search?q=${q}`);\n    return {\n      props: {\n        songs: result.data,\n        error: false\n      }\n    };\n  } catch (e) {\n    return {\n      props: {\n        error: true\n      }\n    };\n  }\n};\nexport default search;","map":{"version":3,"sources":["C:/Users/User/Desktop/projects/sing-along/pages/search.js"],"names":["React","axios","SongCard","Reload","search","songs","error","map","song","index","result","song_art_image_thumbnail_url","title","primary_artist","name","full_title","path","id","getServerSideProps","context","q","query","props","data","e"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AACA,SAASC,MAAT,CAAgB;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAhB,EAA+B;AAC5B,MAAGA,KAAH,EAAS;AACL,wBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACG,sBACI;AAAA,cACKD,KAAK,CAACE,GAAN,CAAU,CAACC,IAAD,EAAMC,KAAN,KAAc;AACtB,0BAAO,QAAC,QAAD;AAAsB,QAAA,GAAG,EAAED,IAAI,CAACE,MAAL,CAAYC,4BAAvC;AAAqE,QAAA,KAAK,EAAEH,IAAI,CAACE,MAAL,CAAYE,KAAxF;AAA+F,QAAA,UAAU,EAAEJ,IAAI,CAACE,MAAL,CAAYG,cAAZ,CAA2BC,IAAtI;AAA4I,QAAA,SAAS,EAAEN,IAAI,CAACE,MAAL,CAAYK,UAAnK;AAA+K,QAAA,IAAI,EAAEP,IAAI,CAACE,MAAL,CAAYM,IAAjM;AAAuM,QAAA,EAAE,EAAER,IAAI,CAACE,MAAL,CAAYO;AAAvN,SAAeR,KAAf;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFC;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAWN;;AAED,OAAO,MAAMS,kBAAkB,GAAC,MAAOC,OAAP,IAAiB;AAC7C,QAAM;AAACC,IAAAA;AAAD,MAAKD,OAAO,CAACE,KAAnB;;AACA,MAAG;AACF,UAAMX,MAAM,GAAE,MAAMT,KAAK,CAAE,gBAAemB,CAAE,EAAnB,CAAzB;AACA,WAAM;AACHE,MAAAA,KAAK,EAAC;AACFjB,QAAAA,KAAK,EAACK,MAAM,CAACa,IADX;AAEFjB,QAAAA,KAAK,EAAC;AAFJ;AADH,KAAN;AAOA,GATD,CAUA,OAAMkB,CAAN,EAAQ;AACL,WAAM;AACFF,MAAAA,KAAK,EAAC;AACJhB,QAAAA,KAAK,EAAC;AADF;AADJ,KAAN;AAMF;AAEJ,CArBM;AAuBP,eAAeF,MAAf","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport SongCard from '../components/songCard';\r\nimport Reload from '../components/reload';\r\nfunction search({songs, error}){\r\n   if(error){\r\n       return(<Reload/>)\r\n   }\r\n       return(\r\n           <div>\r\n               {songs.map((song,index)=>{\r\n                  return(<SongCard key={index} img={song.result.song_art_image_thumbnail_url} title={song.result.title} artistName={song.result.primary_artist.name} fullTitle={song.result.full_title} path={song.result.path} id={song.result.id}/>)\r\n              })}\r\n        \r\n              \r\n           </div>\r\n       )\r\n  \r\n\r\n}\r\n\r\nexport const getServerSideProps=async (context)=>{\r\n    const {q} =context.query;  \r\n    try{ \r\n     const result= await axios(`api/search?q=${q}`);\r\n     return{\r\n        props:{\r\n            songs:result.data,\r\n            error:false\r\n        }\r\n    }\r\n                \r\n    }\r\n    catch(e){\r\n       return{\r\n           props:{\r\n             error:true\r\n            \r\n           }\r\n       }\r\n    }\r\n \r\n}\r\n\r\nexport default search;"]},"metadata":{},"sourceType":"module"}