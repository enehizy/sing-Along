{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\projects\\\\sing-along\\\\pages\\\\search.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport SongCard from '../components/songCard';\nimport LoadingSongs from '../components/loadingSong';\nimport Reload from '../components/reload';\n\nfunction search(_ref) {\n  var _this = this;\n\n  var songs = _ref.songs;\n  // const router=useRouter();\n  // let [loading,setLoading]=useState(true);\n  // let [songs,setSongs]=useState([]);\n  // let [networkError,setNetworkError]=useState(false);\n  // const getSongs=async ()=>{\n  //     try{ \n  //         setLoading(true);\n  //         const result= await axios(`api${router.asPath}`);\n  //         setSongs(result.data.songs)\n  //         setLoading(false);\n  //     }\n  //     catch(e){\n  //       networkError(true);\n  //     }\n  // }\n  // useEffect(()=>{ getSongs() },[router.asPath])\n  //    if(networkError){\n  //        return(<Reload/>)\n  //    }\n  //    if(loading){\n  //       return (<LoadingSongs title=\"Songs\"/>)\n  //    }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: songs.map(function (song, index) {\n      return /*#__PURE__*/_jsxDEV(SongCard, {\n        img: song.result.song_art_image_thumbnail_url,\n        title: song.result.title,\n        artistName: song.result.primary_artist.name,\n        fullTitle: song.result.full_title,\n        path: song.result.path,\n        id: song.result.id\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 26\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 12\n  }, this);\n}\n\nexport var __N_SSP = true;\nexport default search;","map":{"version":3,"sources":["C:/Users/User/Desktop/projects/sing-along/pages/search.js"],"names":["React","useEffect","useState","useRouter","SongCard","LoadingSongs","Reload","search","songs","map","song","index","result","song_art_image_thumbnail_url","title","primary_artist","name","full_title","path","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,SAAQC,SAAR,QAAwB,aAAxB;AAGA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AACA,SAASC,MAAT,OAAwB;AAAA;;AAAA,MAAPC,KAAO,QAAPA,KAAO;AACpB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACO,sBACI;AAAA,cACKA,KAAK,CAACC,GAAN,CAAU,UAACC,IAAD,EAAMC,KAAN,EAAc;AACtB,0BAAO,QAAC,QAAD;AAAsB,QAAA,GAAG,EAAED,IAAI,CAACE,MAAL,CAAYC,4BAAvC;AAAqE,QAAA,KAAK,EAAEH,IAAI,CAACE,MAAL,CAAYE,KAAxF;AAA+F,QAAA,UAAU,EAAEJ,IAAI,CAACE,MAAL,CAAYG,cAAZ,CAA2BC,IAAtI;AAA4I,QAAA,SAAS,EAAEN,IAAI,CAACE,MAAL,CAAYK,UAAnK;AAA+K,QAAA,IAAI,EAAEP,IAAI,CAACE,MAAL,CAAYM,IAAjM;AAAuM,QAAA,EAAE,EAAER,IAAI,CAACE,MAAL,CAAYO;AAAvN,SAAeR,KAAf;AAAA;AAAA;AAAA;AAAA,eAAP;AACH,KAFC;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAWN;;;AAmBD,eAAeJ,MAAf","sourcesContent":["import React,{useEffect,useState} from 'react';\r\nimport {useRouter} from 'next/router';\r\nimport axios from 'axios';\r\n\r\nimport SongCard from '../components/songCard';\r\nimport LoadingSongs from '../components/loadingSong';\r\nimport Reload from '../components/reload';\r\nfunction search({songs}){\r\n    // const router=useRouter();\r\n    // let [loading,setLoading]=useState(true);\r\n    // let [songs,setSongs]=useState([]);\r\n    // let [networkError,setNetworkError]=useState(false);\r\n\r\n    // const getSongs=async ()=>{\r\n    //     try{ \r\n    //         setLoading(true);\r\n    //         const result= await axios(`api${router.asPath}`);\r\n    //         setSongs(result.data.songs)\r\n    //         setLoading(false);\r\n    //     }\r\n    //     catch(e){\r\n    //       networkError(true);\r\n    //     }\r\n    // }\r\n    // useEffect(()=>{ getSongs() },[router.asPath])\r\n//    if(networkError){\r\n//        return(<Reload/>)\r\n//    }\r\n//    if(loading){\r\n//       return (<LoadingSongs title=\"Songs\"/>)\r\n//    }\r\n       return(\r\n           <div>\r\n               {songs.map((song,index)=>{\r\n                  return(<SongCard key={index} img={song.result.song_art_image_thumbnail_url} title={song.result.title} artistName={song.result.primary_artist.name} fullTitle={song.result.full_title} path={song.result.path} id={song.result.id}/>)\r\n              })}\r\n        \r\n              \r\n           </div>\r\n       )\r\n  \r\n\r\n}\r\n\r\nexport const getServerSideProps=async (context)=>{\r\n    try{ \r\n     const {q} =context.query;     \r\n     const result= await axios(`api/search?q=${q}`);\r\n     return{\r\n        props:{\r\n            songs:result.data\r\n        }\r\n    }\r\n                \r\n    }\r\n    catch(e){\r\n        console.log(e);\r\n    }\r\n \r\n}\r\n\r\nexport default search;"]},"metadata":{},"sourceType":"module"}