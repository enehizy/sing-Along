{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/User/Desktop/projects/sing-along/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/User/Desktop/projects/sing-along/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\projects\\\\sing-along\\\\pages\\\\search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport axios from 'axios';\nimport SongCard from '../components/songCard';\nimport LoadingSongs from '../components/loadingSong';\nimport Reload from '../components/reload';\n\nfunction search() {\n  _s();\n\n  var _this = this;\n\n  var router = useRouter();\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState([]),\n      songs = _useState2[0],\n      setSongs = _useState2[1];\n\n  var _useState3 = useState(false),\n      networkError = _useState3[0],\n      setNetworkError = _useState3[1];\n\n  useEffect(function () {\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios(\"api\".concat(router.asPath));\n\n            case 3:\n              result = _context.sent;\n              setSongs(result.data.songs);\n              setLoading(false);\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }))();\n  }, []);\n\n  if (networkError) {\n    return /*#__PURE__*/_jsxDEV(Reload, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }, this);\n  }\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(LoadingSongs, {\n      title: \"Songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: songs.map(function (song, index) {\n      return /*#__PURE__*/_jsxDEV(SongCard, {\n        img: song.result.song_art_image_thumbnail_url,\n        title: song.result.title,\n        artistName: song.result.primary_artist.name,\n        fullTitle: song.result.full_title,\n        path: song.result.path,\n        id: song.result.id\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 26\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 12\n  }, this);\n}\n\n_s(search, \"IaBQCxcN3wlwGZDDzb2esA+qm2A=\", false, function () {\n  return [useRouter];\n});\n\nexport default search;","map":{"version":3,"sources":["C:/Users/User/Desktop/projects/sing-along/pages/search.js"],"names":["React","useEffect","useState","useRouter","axios","SongCard","LoadingSongs","Reload","search","router","loading","setLoading","songs","setSongs","networkError","setNetworkError","asPath","result","data","console","log","map","song","index","song_art_image_thumbnail_url","title","primary_artist","name","full_title","path","id"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AACA,SAASC,MAAT,GAAiB;AAAA;;AAAA;;AACb,MAAMC,MAAM,GAACN,SAAS,EAAtB;;AADa,kBAEYD,QAAQ,CAAC,KAAD,CAFpB;AAAA,MAERQ,OAFQ;AAAA,MAEAC,UAFA;;AAAA,mBAGQT,QAAQ,CAAC,EAAD,CAHhB;AAAA,MAGRU,KAHQ;AAAA,MAGFC,QAHE;;AAAA,mBAIsBX,QAAQ,CAAC,KAAD,CAJ9B;AAAA,MAIRY,YAJQ;AAAA,MAIKC,eAJL;;AAKbd,EAAAA,SAAS,CAAC,YAAI;AAEd,6DAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEuBG,KAAK,cAAOK,MAAM,CAACO,MAAd,EAF5B;;AAAA;AAESC,cAAAA,MAFT;AAGGJ,cAAAA,QAAQ,CAACI,MAAM,CAACC,IAAP,CAAYN,KAAb,CAAR;AACAD,cAAAA,UAAU,CAAC,KAAD,CAAV;AAJH;AAAA;;AAAA;AAAA;AAAA;AAOGQ,cAAAA,OAAO,CAACC,GAAR;;AAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAYC,GAdQ,EAcP,EAdO,CAAT;;AAeD,MAAGN,YAAH,EAAgB;AACZ,wBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,MAAGJ,OAAH,EAAW;AACR,wBAAQ,QAAC,YAAD;AAAc,MAAA,KAAK,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,YAAR;AACF;;AACG,sBACI;AAAA,cACKE,KAAK,CAACS,GAAN,CAAU,UAACC,IAAD,EAAMC,KAAN,EAAc;AACtB,0BAAO,QAAC,QAAD;AAAsB,QAAA,GAAG,EAAED,IAAI,CAACL,MAAL,CAAYO,4BAAvC;AAAqE,QAAA,KAAK,EAAEF,IAAI,CAACL,MAAL,CAAYQ,KAAxF;AAA+F,QAAA,UAAU,EAAEH,IAAI,CAACL,MAAL,CAAYS,cAAZ,CAA2BC,IAAtI;AAA4I,QAAA,SAAS,EAAEL,IAAI,CAACL,MAAL,CAAYW,UAAnK;AAA+K,QAAA,IAAI,EAAEN,IAAI,CAACL,MAAL,CAAYY,IAAjM;AAAuM,QAAA,EAAE,EAAEP,IAAI,CAACL,MAAL,CAAYa;AAAvN,SAAeP,KAAf;AAAA;AAAA;AAAA;AAAA,eAAP;AACH,KAFC;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAWN;;GArCQf,M;UACQL,S;;;AAsCjB,eAAeK,MAAf","sourcesContent":["import React,{useEffect,useState} from 'react';\r\nimport {useRouter} from 'next/router';\r\nimport axios from 'axios';\r\n\r\nimport SongCard from '../components/songCard';\r\nimport LoadingSongs from '../components/loadingSong';\r\nimport Reload from '../components/reload';\r\nfunction search(){\r\n    const router=useRouter();\r\n    let [loading,setLoading]=useState(false);\r\n    let [songs,setSongs]=useState([]);\r\n    let [networkError,setNetworkError]=useState(false);\r\n    useEffect(()=>{\r\n   \r\n    (async function(){\r\n    try{\r\n        const result= await axios(`api${router.asPath}`);\r\n        setSongs(result.data.songs)\r\n        setLoading(false);\r\n    }\r\n    catch(e){\r\n        console.log(e);\r\n    }\r\n    \r\n    })()\r\n\r\n    },[])\r\n   if(networkError){\r\n       return(<Reload/>)\r\n   }\r\n   if(loading){\r\n      return (<LoadingSongs title=\"Songs\"/>)\r\n   }\r\n       return(\r\n           <div>\r\n               {songs.map((song,index)=>{\r\n                  return(<SongCard key={index} img={song.result.song_art_image_thumbnail_url} title={song.result.title} artistName={song.result.primary_artist.name} fullTitle={song.result.full_title} path={song.result.path} id={song.result.id}/>)\r\n              })}\r\n        \r\n              \r\n           </div>\r\n       )\r\n  \r\n\r\n}\r\n\r\nexport default search;"]},"metadata":{},"sourceType":"module"}